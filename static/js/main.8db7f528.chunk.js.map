{"version":3,"sources":["features/i18n/LanguageSelector.tsx","components/Footer/index.tsx","components/Header/index.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","utils/log.ts","utils/i18n.ts","api/githubAPI.ts","utils/helpers.ts","features/pagination/pageSlice.ts","utils/consts.ts","features/i18n/i18nSlice.ts","features/reposList/reposSlice.ts","features/search/searchSlice.ts","features/repoDetails/repoDetailsSlice.ts","components/Loading/index.tsx"],"names":["LanguageSelector","t","useTranslation","dispatch","useDispatch","currentLanguage","useSelector","state","i18n","currentLocale","className","htmlFor","value","onChange","e","target","changeLanguage","setCurrentLocale","id","Object","entries","LANGUAGES","map","languageCode","name","emojiFlag","key","Footer","href","PROJECT_REPO_LINK","Date","getFullYear","Header","forwardRef","props","ref","to","ROUTES","MAIN","width","height","process","MainPage","lazy","NotFoundPage","RepoDetails","App","useRef","fallback","Loading","path","exact","component","REPO_CARD","NOT_FOUND","rootReducer","combineReducers","repos","pages","search","repoDetails","store","configureStore","reducer","require","default","ReactDOM","render","document","getElementById","LEVELS","METHODS","print","level","method","args","length","now","formatted","toISOString","console","log","debug","DEBUG","warn","WARN","error","ERROR","resources","en","translation","ru","use","languageDetector","initReactI18next","init","fallbackLng","BASE_LOCALE","keySeparator","interpolation","escapeValue","fetchRepos","q","page","a","config","params","sort","order","per_page","REPOS_PER_PAGE","headers","axios","get","response","data","message","fetchRepoDetails","fetchContributors","url","interceptors","request","GITHUB_OAUTH_TOKEN","Error","Authorization","getPageNumbers","totalPages","reposPerPage","shift","Math","floor","maybeLeftmost","maybeRightmost","rightmost","rightmostShifted","leftmost","i","push","formatDate","dateTime","language","navigator","options","DEFAULT_DATE_FORMAT_OPTIONS","toLocaleString","saveInSessionStorage","sessionStorage","localStorage","clear","initialState","currentPage","parseInt","pageSlice","createSlice","reducers","setCurrentPage","action","payload","toString","setTotalPages","total_count","ceil","actions","INPUT_DEBOUNCE_DELAY","TOP_CONTRIBUTORS_QUANTITY","FIRST_PAGE","DEFAULT_SEARCH_TERM","year","month","day","hour","minute","hour12","i18nSlice","reposSlice","loadRepos","items","isSearching","searchTerm","searchSlice","setIsSearching","setSearchTerm","isFetchingContributors","repoDetailSlice","getRepoDetails","stargazers_count","updated_at","description","owner","contributors","html_url","getRepoContributors","resetRepoDetails","loadRepoDetails","contributors_url","repoContributors","text"],"mappings":"kQA0CeA,G,MAjCU,WAAO,IACtBC,EAAMC,cAAND,EACFE,EAAWC,cACXC,EAAkBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,KAAKC,iBAQrE,OACE,yBAAKC,UAAU,qBACb,2BAAOC,QAAQ,mBAAmBV,EAAE,aACpC,4BACEW,MAAOP,EACPQ,SAXiB,SAACC,GAA6C,IAC3DF,EAAUE,EAAEC,OAAZH,MACRJ,IAAKQ,eAAeJ,GACpBT,EAASc,YAAiBL,KAStBF,UAAU,0BACVQ,GAAG,mBAEFC,OAAOC,QAAQC,KACbC,KAAI,mCAAEC,EAAF,YAAkBC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,UAAxB,OACH,4BAAQC,IAAKF,EAAMZ,MAAOW,GACvBE,EADH,OAGGD,UClBAG,G,MAXA,kBACb,4BAAQjB,UAAU,UAChB,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,eAAekB,KAAMC,KAAlC,QADF,OAGE,+BAAO,IAAIC,MAAOC,gBAEpB,kBAAC,EAAD,S,QCIWC,G,MAXAC,sBAA4B,SAACC,EAAOC,GAAR,OACzC,4BAAQzB,UAAU,SAASyB,IAAKA,GAC9B,kBAAC,IAAD,CAAMC,GAAIC,IAAOC,KAAM5B,UAAU,gBAC/B,yBAAK6B,MAAM,KAAKC,OAAO,MACrB,2BAAO9B,UAAU,gBAAgBkB,KAAI,UAAKa,oBAAL,sBAEvC,wBAAI/B,UAAU,sBAAd,mBCGAgC,G,cAAWC,gBAAK,kBAAM,kCACtBC,EAAeD,gBAAK,kBAAM,iCAC1BE,EAAcF,gBAAK,kBAAM,iCAoChBG,UA9BH,WACV,IAAMX,EAAMY,iBAAwB,MAEpC,OACE,iCACE,0BAAMrC,UAAU,aACd,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQyB,IAAKA,IACb,kBAAC,WAAD,CAAUa,SAAU,kBAACC,EAAA,EAAD,OAClB,yBAAKvC,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEwC,KAAMb,IAAOC,KACba,OAAK,EACLC,UAAW,SACTlB,GADS,OAEN,kBAACQ,EAAD,iBAAcR,EAAd,CAAqBC,IAAKA,QAEjC,kBAAC,IAAD,CAAOe,KAAMb,IAAOgB,UAAWF,OAAK,EAACC,UAAWP,IAChD,kBAAC,IAAD,CAAOK,KAAMb,IAAOiB,UAAWF,UAAWR,SAMpD,kBAAC,EAAD,S,4ICjCSW,EANKC,YAAgB,CAClCC,UAAOC,UAAOC,WAAQC,gBAAapD,WCWtBqD,MAfDC,YAAe,CAC3BC,QAASR,I,aCCX,WAEE,IAAMT,EAAMkB,EAAQ,KAAWC,QAC/BC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAACf,EAAD,OAEFsB,SAASC,eAAe,SAI5BF,I,oCChBKG,EAMAC,E,kBANAD,O,iBAAAA,I,eAAAA,I,kBAAAA,M,cAMAC,K,cAAAA,E,YAAAA,E,eAAAA,M,KAML,IAAMC,EAAQ,SAACC,EAA4BC,EAAiBC,GAAe,IAAD,EACxE,KAAIL,EAAM,MAAkBA,EAAOG,KAI9BE,GAAwB,IAAhBA,EAAKC,QAAiBD,EAAK,GAAxC,CAIA,IAAME,EAAM,IAAI/C,KACVgD,EAAS,UAAMD,EAAIE,cAAV,MAEf,EAAAC,SAAQN,GAAR,SAAgBI,GAAhB,mBAA8BH,OAG1BM,EAAM,CACVC,MADU,WACW,IAAD,uBAAXP,EAAW,yBAAXA,EAAW,gBAClBH,EAAM,QAASD,EAAQY,MAAOR,IAGhCS,KALU,WAKU,IAAD,uBAAXT,EAAW,yBAAXA,EAAW,gBACjBH,EAAM,OAAQD,EAAQc,KAAMV,IAG9BW,MATU,WASW,IAAD,uBAAXX,EAAW,yBAAXA,EAAW,gBAClBH,EAAM,QAASD,EAAQgB,MAAOZ,KAInBM,O,gCC3Cf,mDAOMO,EAAY,CAChBC,GAAI,CACFC,YAAaD,GAEfE,GAAI,CACFD,YAAaC,IAIjBnF,IACGoF,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJP,YACAQ,YAAaC,IAEbC,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIJ5F,MAAf,G,0MCHa6F,EAAU,uCAAG,WAAOC,EAAWC,GAAlB,iBAAAC,EAAA,sEAEhBC,EAAkB,CACtBC,OAAQ,CACNJ,IACAC,OACAI,KAAM,QACNC,MAAO,OACPC,SAAUC,KAEZC,QAAS,IAVW,SAaCC,IAAMC,IAnCd,6CAmCgDR,GAbzC,cAahBS,EAbgB,yBAefA,EAASC,MAfM,uCAiBtBlC,IAAIK,MAAJ,MAjBsB,kBAkBf,KAAE8B,SAlBa,yDAAH,wDAsBVC,EAAgB,uCAAG,WAAOnG,GAAP,eAAAsF,EAAA,+EAELQ,IAAMC,IAAN,UA7CV,sCA6CU,YAA+B/F,IAF1B,cAEtBgG,EAFsB,yBAIrBA,EAASC,MAJY,uCAM5BlC,IAAIK,MAAJ,MAN4B,kBAOrB,KAAE8B,SAPmB,yDAAH,sDAiBhBE,EAAiB,uCAAG,WAAOC,GAAP,eAAAf,EAAA,+EAENQ,IAAMC,IAAmBM,GAFnB,cAEvBL,EAFuB,yBAItBA,EAASC,MAJa,uCAM7BlC,IAAIK,MAAJ,MAN6B,kBAOtB,KAAE8B,SAPoB,yDAAH,sDAW9BJ,IAAMQ,aAAaC,QAAQ7B,KAAI,WAAoC,IAAnCa,EAAkC,uDAAP,GACzD,IAAI,MAE6BzC,EAAQ,IAA/B0D,EAFN,EAEMA,mBAER,IAAKA,EACH,MAAM,IAAIC,MAAM,0FAIlBlB,EAAOM,QAAP,2BAAsBN,EAAOM,SAA7B,IAAsCa,cAAc,SAAD,OAAWF,KAC9D,MAAO5G,GACPmE,IAAIK,MAAMxE,GACVmE,IAAIK,MAAM,uHAZZ,QAeE,OAAOmB,O,gCC7FX,yHAGaoB,EAAiB,SAC5BtB,EAAcuB,GAYd,IAXI,IAD8BC,EAC/B,uDADsDjB,IAEnDkB,EAAQC,KAAKC,MAAMH,EAAe,GAClCI,EAAgB5B,EAAOyB,EAAQzB,EAAOyB,EAAQ,EAC9CI,EAAiBD,EAAgBJ,EAEjCM,EAAYD,EAAiBN,EAAaM,EAAiBN,EAC3DQ,EAAmBD,EAAYN,EAAeM,EAAYvB,IAAiBuB,EAE3EE,EAAWJ,EAAgBG,EAAmBH,EAAgBG,EAE9D5E,EAAQ,GACL8E,EAAID,EAAUC,EAAIH,EAAWG,GAAK,EACzC9E,EAAM+E,KAAKD,EAAI,GAGjB,OAAO9E,GAGIgF,EAAa,SACxBC,GADwB,IACNC,EADM,uDACaC,UAAUD,SAAUE,EADjC,uDAC2CC,IAD3C,OAErB,IAAIjH,KAAK6G,GAAUK,eAAeJ,EAAUE,IAEpCG,EAAuB,SAACvH,EAAad,GAChD,IAEE,OADAsI,eAAexH,GAAOd,EACfA,EACP,MAAOE,GAKP,OAJAmE,IAAIK,MAAMxE,GACVmE,IAAIK,MAAM,mEACV6D,aAAaC,QACbF,eAAexH,GAAOd,EACfA,K,gCCpCX,8FAOMyI,EAAuB,CAC3BvB,WAAY,EACZwB,YAAaC,SAASL,eAAeI,YAAa,KAAO,GAGrDE,EAAYC,YAAY,CAC5BjI,KAAM,QACN6H,eACAK,SAAU,CACRC,eAAgB,SAACpJ,EAAOqJ,GAKtB,OAJArJ,EAAM+I,YAAcM,EAAOC,QAE3BZ,YAAqB,cAAe1I,EAAM+I,YAAYQ,YAE/CvJ,GAETwJ,cAAe,SAACxJ,EAAOqJ,GACrB,IAAMI,EAAcJ,EAAOC,QAG3B,OAFAtJ,EAAMuH,WAAaG,KAAKgC,KAAKD,EAAclD,KAEpCvG,M,EAQTiJ,EAAUU,QAFZP,E,EAAAA,eACAI,E,EAAAA,cAGaP,MAAf,S,+BCrCA,oVAAO,IAAMW,EAAuB,IAEvBrD,EAAiB,GAEjBsD,EAA4B,GAE5BC,EAAa,EAEbC,EAAsB,gBAEtBvB,EAA8B,CACzCwB,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,QAAQ,GAGGvI,EAAS,CACpBC,KAAM,IACNe,UAAW,OACXC,UAAW,KAGA2C,EAAc,KAEd5E,EAAY,CACvBoE,GAAI,CAAEjE,KAAM,UAAWC,UAAW,4BAClCkE,GAAI,CAAEnE,KAAM,6CAAWC,UAAW,6BAGvBI,EAAoB,mD,gCChCjC,6CAIMwH,EAAe,CAAE5I,cAJvB,MAIsCD,EAAKoI,UAErCiC,EAAYpB,YAAY,CAC5BjI,KAAM,OACN6H,eACAK,SAAU,CACRzI,iBAAkB,SAACV,EAAOqJ,GAGxB,OAFArJ,EAAME,cAAgBmJ,EAAOC,QAEtBtJ,MAMXU,EACE4J,EAAUX,QADZjJ,iBAGa4J,MAAf,S,qHCZMC,EAAarB,YAAY,CAC7BjI,KAAM,QACN6H,aAJ2B,GAK3BK,SAAU,CACRrD,WAAY,SAAC9F,EAAOqJ,GAAR,OAAkDA,EAAOC,YAI5DkB,EAAY,SAACzE,EAAWC,GAAZ,8CAAuC,WAAOpG,GAAP,eAAAqG,EAAA,sEAC1CH,YAAWC,EAAGC,GAD4B,UAGzC,kBAFf9C,EADwD,8BAItDA,EAJsD,OAO9DtD,EAAS2K,EAAWZ,QAAQ7D,WAAW5C,EAAMuH,QAC7C7K,EAAS4J,YAActG,EAAMuG,cARiC,2CAAvC,uDAWVc,MAAf,S,gCC7BA,uFAMMzB,EAAuB,CAAE4B,aAAa,EAAOC,WAAYhC,eAAegC,YAAc,IAEtFC,EAAc1B,YAAY,CAC9BjI,KAAM,SACN6H,eACAK,SAAU,CACR0B,eAAgB,SAAC7K,EAAOqJ,GAGtB,OAFArJ,EAAM0K,YAAcrB,EAAOC,QAEpBtJ,GAET8K,cAAe,SAAC9K,EAAOqJ,GAKrB,OAJArJ,EAAM2K,WAAatB,EAAOC,QAE1BZ,YAAqB,aAAc1I,EAAM2K,YAElC3K,M,EAQT4K,EAAYjB,QAFdkB,E,EAAAA,eACAC,E,EAAAA,cAGaF,MAAf,S,+IC1BM9B,EAAqE,CACzEiC,wBAAwB,GAGpBC,EAAkB9B,YAAY,CAClCjI,KAAM,cACN6H,eACAK,SAAU,CACR8B,eADQ,SACOjL,EAAOqJ,GAAoC,IAAD,EAWnDA,EAAOC,QAcX,MAZQ,CACN3I,GAdqD,EAErDA,GAaAM,KAfqD,EAGrDA,KAaAiK,iBAhBqD,EAIrDA,iBAaAC,WAjBqD,EAKrDA,WAaA9C,SAlBqD,EAMrDA,SAaA+C,YAnBqD,EAOrDA,YAaAC,MApBqD,EAQrDA,MAaAC,aArBqD,EASrDA,aAaAC,SAtBqD,EAUrDA,WAiBJC,oBAAqB,SAACxL,EAAOqJ,GAI3B,OAHArJ,EAAMsL,aAAejC,EAAOC,QAC5BtJ,EAAM+K,wBAAyB,EAExB/K,GAETyL,iBAAkB,SAACzL,GAEjB,OADQ8I,MAMC2C,EAAqBT,EAAgBrB,QAArC8B,iBAEFC,EAAkB,SAAC/K,GAAD,8CAA0B,WAAOf,GAAP,iBAAAqG,EAAA,sEAC7Ba,YAAiBnG,GADY,UAG5B,kBAFrB0C,EADiD,8BAI/CA,EAJ+C,OAMrDzD,EAASoL,EAAgBrB,QAAQsB,eAAe5H,IANK,wBASxB0D,YAAkB1D,EAAYsI,kBATN,WAWvB,kBAF1BC,EATiD,+BAY/CA,EAZ+C,QAcrDhM,EAASoL,EAAgBrB,QAAQ6B,oBAAoBI,IAdA,4CAA1B,uDAkBhBZ,MAAf,S,gCC1EA,mCAaetI,IALC,SAAC,GAAsB,IAApBmJ,EAAmB,EAAnBA,KACTnM,EAAMC,cAAND,EACR,OAAO,wBAAIS,UAAU,gBAAgB0L,GAAQnM,EAAE,c","file":"static/js/main.8db7f528.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LANGUAGES } from 'utils/consts';\nimport i18n from 'utils/i18n';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'app/rootReducer';\nimport { setCurrentLocale } from 'features/i18n/i18nSlice';\nimport 'features/i18n/LanguageSelector.css';\n\nconst LanguageSelector = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const currentLanguage = useSelector((state: RootState) => state.i18n.currentLocale);\n\n  const changeLanguage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n    i18n.changeLanguage(value);\n    dispatch(setCurrentLocale(value));\n  };\n\n  return (\n    <div className=\"language-selector\">\n      <label htmlFor=\"language-select\">{t('language')}</label>\n      <select\n        value={currentLanguage}\n        onChange={changeLanguage}\n        className=\"select select--language\"\n        id=\"language-select\"\n      >\n        {Object.entries(LANGUAGES)\n          .map(([languageCode, { name, emojiFlag }]) => (\n            <option key={name} value={languageCode}>\n              {emojiFlag}\n              &nbsp;\n              {name}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n","import React from 'react';\nimport LanguageSelector from 'features/i18n/LanguageSelector';\nimport 'components/Footer/index.css';\nimport { PROJECT_REPO_LINK } from 'utils/consts';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__year\">\n      <a className=\"icon--purple\" href={PROJECT_REPO_LINK}>©</a>\n      &nbsp;\n      <time>{new Date().getFullYear()}</time>\n    </span>\n    <LanguageSelector />\n  </footer>\n);\n\nexport default Footer;\n","import React, { forwardRef } from 'react';\nimport { ROUTES } from 'utils/consts';\nimport { Link } from 'react-router-dom';\nimport 'components/Header/index.css';\n\nconst Header = forwardRef<HTMLHeadElement>((props, ref) => (\n  <header className=\"header\" ref={ref}>\n    <Link to={ROUTES.MAIN} className=\"header__link\">\n      <svg width=\"50\" height=\"50\">\n        <image className=\"header__image\" href={`${process.env.PUBLIC_URL}/react-logo.svg`} />\n      </svg>\n      <h2 className=\"header__link--name\">Dashboard</h2>\n    </Link>\n  </header>\n));\n\nexport default Header;\n","import React, { Suspense, lazy, useRef } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  RouteChildrenProps,\n  Switch,\n} from 'react-router-dom';\nimport { ROUTES } from 'utils/consts';\nimport Footer from 'components/Footer';\nimport Loading from 'components/Loading';\nimport Header from 'components/Header';\nimport 'app/main.css';\nimport 'app/App.css';\n\nconst MainPage = lazy(() => import('components/MainPage'));\nconst NotFoundPage = lazy(() => import('components/NotFoundPage'));\nconst RepoDetails = lazy(() => import('features/repoDetails/RepoDetails'));\n\n// TODO: cache api calls https://developer.github.com/v3/#conditional-requests\n// TODO: describe script in readme\n// TODO: add smooth scroll on repo details open?\n// TODO: add black theme?\nconst App = () => {\n  const ref = useRef<HTMLHeadElement>(null);\n\n  return (\n    <article>\n      <main className=\"container\">\n        <Router>\n          <Header ref={ref} />\n          <Suspense fallback={<Loading />}>\n            <div className=\"main-content\">\n              <Switch>\n                <Route\n                  path={ROUTES.MAIN}\n                  exact\n                  component={(\n                    props: RouteChildrenProps,\n                  ) => <MainPage {...props} ref={ref} />}\n                />\n                <Route path={ROUTES.REPO_CARD} exact component={RepoDetails} />\n                <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n              </Switch>\n            </div>\n          </Suspense>\n        </Router>\n      </main>\n      <Footer />\n    </article>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport repos from 'features/reposList/reposSlice';\nimport pages from 'features/pagination/pageSlice';\nimport search from 'features/search/searchSlice';\nimport repoDetails from 'features/repoDetails/repoDetailsSlice';\nimport i18n from 'features/i18n/i18nSlice';\n\nconst rootReducer = combineReducers({\n  repos, pages, search, repoDetails, i18n,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'app/store';\nimport 'index.css';\nimport 'utils/i18n';\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('app/App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n}\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('app/App', render);\n}\n","const CURRENT_LEVEL = 'DEBUG';\n\nenum LEVELS {\n    ERROR,\n    WARN,\n    DEBUG,\n}\n\nenum METHODS {\n    ERROR = 'error',\n    WARN = 'warn',\n    DEBUG = 'debug',\n}\n\nconst print = (level: keyof typeof LEVELS, method: METHODS, args: any) => {\n  if (LEVELS[CURRENT_LEVEL] < LEVELS[level]) {\n    return;\n  }\n\n  if (!args || args.length === 0 || !args[0]) {\n    return;\n  }\n\n  const now = new Date();\n  const formatted = `${now.toISOString()}:`;\n  // eslint-disable-next-line no-console\n  console[method](formatted, ...args);\n};\n\nconst log = {\n  debug(...args: any) {\n    print('DEBUG', METHODS.DEBUG, args);\n  },\n\n  warn(...args: any) {\n    print('WARN', METHODS.WARN, args);\n  },\n\n  error(...args: any) {\n    print('ERROR', METHODS.ERROR, args);\n  },\n};\n\nexport default log;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport { BASE_LOCALE } from 'utils/consts';\nimport ru from '__locales/ru.json';\nimport en from '__locales/en.json';\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  ru: {\n    translation: ru,\n  },\n};\n\ni18n\n  .use(languageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: BASE_LOCALE,\n\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import axios from 'axios';\nimport { Repo, Contributor } from 'features/reposList/types';\nimport { REPOS_PER_PAGE } from 'utils/consts';\nimport log from 'utils/log';\n\nconst SEARCH_URL = 'https://api.github.com/search/repositories';\nconst REPO_URL = 'https://api.github.com/repositories';\n\nexport interface GetReposResponse {\n    incomplete_results: boolean,\n    items: Repo[],\n    total_count: number,\n}\n\ninterface IConfig {\n    params: {\n        q: string,\n        page?: number,\n        sort?: 'stars' | 'forks' | 'help-wanted-issues' | 'updated',\n        order?: 'desc' | 'asc',\n        per_page?: number,\n    },\n    headers: {\n        Authorization?: string,\n    },\n}\n\nexport const fetchRepos = async (q: string, page: number): Promise<GetReposResponse | string> => {\n  try {\n    const config: IConfig = {\n      params: {\n        q,\n        page,\n        sort: 'stars',\n        order: 'desc',\n        per_page: REPOS_PER_PAGE,\n      },\n      headers: {},\n    };\n\n    const response = await axios.get<GetReposResponse>(SEARCH_URL, config);\n\n    return response.data;\n  } catch (e) {\n    log.error(e);\n    return e.message;\n  }\n};\n\nexport const fetchRepoDetails = async (id: string): Promise<Repo | string> => {\n  try {\n    const response = await axios.get<Repo>(`${REPO_URL}/${id}`);\n\n    return response.data;\n  } catch (e) {\n    log.error(e);\n    return e.message;\n  }\n};\n\n/**\n * https://developer.github.com/v3/repos/#list-repository-contributors\n *\n * Lists contributors to the specified repository and\n * sorts them by the number of commits per contributor in descending order.\n */\nexport const fetchContributors = async (url: string): Promise<Contributor[] | string> => {\n  try {\n    const response = await axios.get<Contributor[]>(url);\n\n    return response.data;\n  } catch (e) {\n    log.error(e);\n    return e.message;\n  }\n};\n\naxios.interceptors.request.use((config: Partial<IConfig> = {}) => {\n  try {\n    // eslint-disable-next-line global-require\n    const { GITHUB_OAUTH_TOKEN } = require('secret.json');\n\n    if (!GITHUB_OAUTH_TOKEN) {\n      throw new Error('No Access Token provided. Read the README Access token section for more details: https');\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    config.headers = { ...config.headers, Authorization: `token ${GITHUB_OAUTH_TOKEN}` };\n  } catch (e) {\n    log.error(e);\n    log.error('Read the README Access token section for more details: https://github.com/ArtemBaskal/github-dashboard#access-token');\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    return config;\n  }\n});\n","import { REPOS_PER_PAGE, DEFAULT_DATE_FORMAT_OPTIONS } from 'utils/consts';\nimport log from 'utils/log';\n\nexport const getPageNumbers = (\n  page: number, totalPages: number, reposPerPage: number = REPOS_PER_PAGE,\n) => {\n  const shift = Math.floor(reposPerPage / 2);\n  const maybeLeftmost = page > shift ? page - shift : 0;\n  const maybeRightmost = maybeLeftmost + reposPerPage;\n\n  const rightmost = maybeRightmost < totalPages ? maybeRightmost : totalPages;\n  const rightmostShifted = rightmost > reposPerPage ? rightmost - REPOS_PER_PAGE : rightmost;\n\n  const leftmost = maybeLeftmost < rightmostShifted ? maybeLeftmost : rightmostShifted;\n\n  const pages = [];\n  for (let i = leftmost; i < rightmost; i += 1) {\n    pages.push(i + 1);\n  }\n\n  return pages;\n};\n\nexport const formatDate = (\n  dateTime: string, language: string = navigator.language, options = DEFAULT_DATE_FORMAT_OPTIONS,\n) => new Date(dateTime).toLocaleString(language, options);\n\nexport const saveInSessionStorage = (key: string, value: string): string => {\n  try {\n    sessionStorage[key] = value;\n    return value;\n  } catch (e) {\n    log.error(e);\n    log.error('The limit of sessionStorage is exceeded and it will be cleared.');\n    localStorage.clear();\n    sessionStorage[key] = value;\n    return value;\n  }\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REPOS_PER_PAGE } from 'utils/consts';\nimport { saveInSessionStorage } from 'utils/helpers';\n\ntype IRepos = { totalPages: number, currentPage: number };\n\nconst initialState: IRepos = {\n  totalPages: 1,\n  currentPage: parseInt(sessionStorage.currentPage, 10) || 1,\n};\n\nconst pageSlice = createSlice({\n  name: 'pages',\n  initialState,\n  reducers: {\n    setCurrentPage: (state, action: PayloadAction<number>) => {\n      state.currentPage = action.payload;\n\n      saveInSessionStorage('currentPage', state.currentPage.toString());\n\n      return state;\n    },\n    setTotalPages: (state, action: PayloadAction<number>) => {\n      const total_count = action.payload;\n      state.totalPages = Math.ceil(total_count / REPOS_PER_PAGE);\n\n      return state;\n    },\n  },\n});\n\nexport const {\n  setCurrentPage,\n  setTotalPages,\n} = pageSlice.actions;\n\nexport default pageSlice.reducer;\n","export const INPUT_DEBOUNCE_DELAY = 500;\n\nexport const REPOS_PER_PAGE = 10;\n\nexport const TOP_CONTRIBUTORS_QUANTITY = 10;\n\nexport const FIRST_PAGE = 1;\n\nexport const DEFAULT_SEARCH_TERM = 'stars:>100000';\n\nexport const DEFAULT_DATE_FORMAT_OPTIONS = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  hour12: false,\n};\n\nexport const ROUTES = {\n  MAIN: '/',\n  REPO_CARD: '/:id',\n  NOT_FOUND: '*',\n};\n\nexport const BASE_LOCALE = 'ru';\n\nexport const LANGUAGES = {\n  en: { name: 'English', emojiFlag: '🇬🇧' },\n  ru: { name: 'Русский', emojiFlag: '🇷🇺' },\n};\n\nexport const PROJECT_REPO_LINK = 'https://github.com/ArtemBaskal/github-dashboard';\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport i18n from 'utils/i18n';\n\nconst initialState = { currentLocale: i18n.language };\n\nconst i18nSlice = createSlice({\n  name: 'i18n',\n  initialState,\n  reducers: {\n    setCurrentLocale: (state, action: PayloadAction<string>) => {\n      state.currentLocale = action.payload;\n\n      return state;\n    },\n  },\n});\n\nexport const {\n  setCurrentLocale,\n} = i18nSlice.actions;\n\nexport default i18nSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, AppDispatch } from 'app/store';\nimport { fetchRepos } from 'api/githubAPI';\nimport { Repo } from 'features/reposList/types';\nimport { setTotalPages } from 'features/pagination/pageSlice';\n\ntype IRepos = Repo[];\n\nconst initialState: IRepos = [];\n\nconst reposSlice = createSlice({\n  name: 'repos',\n  initialState,\n  reducers: {\n    fetchRepos: (state, action: PayloadAction<Repo[]>): IRepos => action.payload,\n  },\n});\n\nexport const loadRepos = (q: string, page: number): AppThunk => async (dispatch: AppDispatch) => {\n  const repos = await fetchRepos(q, page);\n\n  if (typeof repos === 'string') {\n    throw repos;\n  }\n\n  dispatch(reposSlice.actions.fetchRepos(repos.items));\n  dispatch(setTotalPages(repos.total_count));\n};\n\nexport default reposSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { saveInSessionStorage } from 'utils/helpers';\n\ntype IRepos = { isSearching: boolean, searchTerm: string };\n\nconst initialState: IRepos = { isSearching: false, searchTerm: sessionStorage.searchTerm || '' };\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setIsSearching: (state, action: PayloadAction<boolean>) => {\n      state.isSearching = action.payload;\n\n      return state;\n    },\n    setSearchTerm: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n\n      saveInSessionStorage('searchTerm', state.searchTerm);\n\n      return state;\n    },\n  },\n});\n\nexport const {\n  setIsSearching,\n  setSearchTerm,\n} = searchSlice.actions;\n\nexport default searchSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, AppDispatch } from 'app/store';\nimport { fetchRepoDetails, fetchContributors } from 'api/githubAPI';\nimport { Repo, Contributor } from 'features/reposList/types';\n\nconst initialState: Partial<Repo> & { isFetchingContributors?: boolean } = {\n  isFetchingContributors: true,\n};\n\nconst repoDetailSlice = createSlice({\n  name: 'repoDetails',\n  initialState,\n  reducers: {\n    getRepoDetails(state, action: PayloadAction<Repo>): Repo {\n      const {\n        id,\n        name,\n        stargazers_count,\n        updated_at,\n        language,\n        description,\n        owner,\n        contributors,\n        html_url,\n      } = action.payload;\n\n      state = {\n        id,\n        name,\n        stargazers_count,\n        updated_at,\n        language,\n        description,\n        owner,\n        contributors,\n        html_url,\n      };\n\n      return state as Repo;\n    },\n    getRepoContributors: (state, action: PayloadAction<Contributor[]>): Repo => {\n      state.contributors = action.payload;\n      state.isFetchingContributors = false;\n\n      return state as Repo;\n    },\n    resetRepoDetails: (state) => {\n      state = initialState;\n      return state;\n    },\n  },\n});\n\nexport const { resetRepoDetails } = repoDetailSlice.actions;\n\nexport const loadRepoDetails = (id: string): AppThunk => async (dispatch: AppDispatch) => {\n  const repoDetails = await fetchRepoDetails(id);\n\n  if (typeof repoDetails === 'string') {\n    throw repoDetails;\n  } else {\n    dispatch(repoDetailSlice.actions.getRepoDetails(repoDetails));\n  }\n\n  const repoContributors = await fetchContributors(repoDetails.contributors_url!);\n\n  if (typeof repoContributors === 'string') {\n    throw repoContributors;\n  } else {\n    dispatch(repoDetailSlice.actions.getRepoContributors(repoContributors));\n  }\n};\n\nexport default repoDetailSlice.reducer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport 'components/Loading/index.css';\n\ntype IProps = {\n    text?: string\n}\n\nconst Loading = ({ text }: IProps) => {\n  const { t } = useTranslation();\n  return <h1 className=\"loader__text\">{text || t('loading')}</h1>;\n};\n\nexport default Loading;\n"],"sourceRoot":""}